WindowManager:
#    MainWindow:
#    BeginnerWindow:
#    IntermediateWindow:
#    ExpertWindow:
#    AbsoluteHearing:
    NoteReading:
<Button>
    # TODO: to cheak why background_down not working.
    background_down:"lightsteelblue"
    font_name:'Amadeus'
    halign: 'center'
    size_hint:0.21,0.2
    background_normal:''
    background_color: (212/255, 186/255, 154/255,1)
    font_size: 28

<FloatLayout>
        #title
    canvas.before:
        Color:
            rgba:(242/255, 213/255, 213/255, 1)
        Rectangle:
            pos:self.pos
            size:self.size
<Label>
    color: (0.2, 0, 0,1)
    font_name:'Amadeus'
#<MainWindow>:
#    name:"main"
#           # TODO:make abstract layout for all pages below
#    FloatLayout:
#        Label:
#            font_size: 50
#            pos_hint:{"x":0,"y":0.22}
#            text:"welcome to pianista ! \n please choose level"
#
#        Button:
#            pos_hint:{"x":0.15,"y":0.3}
#            text:"Beginner"
#            on_release:
#                root.manager.transition.direction = "left"
#                app.root.current = "Beginner"
#                self.background_color = 'burlywood'
#
#        Button:
#            pos_hint:{"x":0.40,"y":0.3}
#            text:"Intermediate"
#            on_release:
#                app.root.current="Intermediate"
#                root.manager.transition.direction = "left"
#                self.background_color = (212/255, 186/255, 154/255,0.7)
#
#
#        Button:
#            pos_hint:{"x":0.65,"y":0.3}
#            text:"Expert"
#            on_release:
#                root.manager.transition.direction = "left"
#                app.root.current="Expert"
#
#<BeginnerWindow>:
#    name: "Beginner"
#    FloatLayout:
#        Label:
#            font_size: 50
#            pos_hint:{"x":0,"y":0.22}
#            text:"Please choose mode"
#
#        Button:
#            pos_hint:{"x":0.25,"y":0.3}
#            text:"Rhythm\npractice"
#            on_release:
#                root.manager.transition.direction = "left"
#                app.root.current = "Rhythm practice"
#                self.background_color = (212/255, 186/255, 154/255,0.7)
#        Button:
#            pos_hint:{"x":0.51,"y":0.3}
#            text:"Note reading\npractice"
#            on_release:
#                root.manager.transition.direction = "left"
#                app.root.current="NoteReading"
#
#        Button:
#            text:"Go Back"
#            on_release:
#                root.manager.transition.direction = "right"
#                app.root.current = "main"

#<IntermediateWindow>:
#    name:"Intermediate"
#    BeginnerWindow:
#
#
#
#<ExpertWindow>:
#    name:"Expert"
#    FloatLayout:
#
#        Label:
#            font_size: 50
#            pos_hint:{"x":0,"y":0.22}
#            text:"Please choose mode"
#
#        Button:
#            pos_hint:{"x":0.25,"y":0.3}
#            text:"Absolute\nhearing"
#            on_release:
#                root.manager.transition.direction = "left"
#                app.root.current = "AbsoluteHearing"
#                self.background_color = (212/255, 186/255, 154/255,0.7)
#
#        Button:
#            pos_hint:{"x":0.51,"y":0.3}
#            text:"Composer\nmode"
#            disabled: True
#
#
#        Button:
#            text:"Go Back"
#            on_release:
#                root.manager.transition.direction = "right"
#                app.root.current = "main"

#<AbsoluteHearing>
#    name:"AbsoluteHearing"
#    FloatLayout:
#
#        Label:
#            font_size: 50
#            pos_hint:{"x":0,"y":0.22}
#            text:"Click the note you think was played:"
#
#        Button:
#            pos_hint:{"x":0,"y":0.8}
#            text: 'For play\npress here'
#            on_release: app.countdown.count()
#            on_release: app.root.current = "PBMode"
#
#            on_state:
#                print("my current state is {}".format(self.state))
#        Button:
#            font_size: 50
#            size_hint:0.11,0.12
#            pos_hint:{"x":0.06,"y":0.4}
#            text:"c"
#            on_release:
#                app.root.current = ""
#
#        Button:
#            text:"d"
#            font_size: 50
#            size_hint:0.11,0.12
#            pos_hint:{"x":0.18,"y":0.4}
#            on_release:
#                root.manager.transition.direction = "right"
#                app.root.current = "main"
#
#        Button:
#            font_size: 50
#            size_hint:0.12,0.12
#            pos_hint:{"x":0.30,"y":0.4}
#            text:"e"
#            on_release:
#                root.manager.transition.direction = "right"
#                app.root.current = "main"
#
#        Button:
#            text:"f"
#            font_size: 50
#            size_hint:0.12,0.12
#            pos_hint:{"x":0.43,"y":0.4}
#            on_release:
#                root.manager.transition.direction = "right"
#                app.root.current = "main"
#        Button:
#            text:"g"
#            font_size: 50
#            size_hint:0.12,0.12
#            pos_hint:{"x":0.56,"y":0.4}
#            on_release:
#                root.manager.transition.direction = "right"
#                app.root.current = "main"
#
#        Button:
#            text:"a"
#            font_size: 50
#            size_hint:0.12,0.12
#            pos_hint:{"x":0.69,"y":0.4}
#            on_release:
#                root.manager.transition.direction = "right"
#                app.root.current = "main"
#
#        Button:
#            text:"b"
#            font_size: 50
#            size_hint:0.12,0.12
#            pos_hint:{"x":0.82,"y":0.4}
#            on_release:
#                root.manager.transition.direction = "right"
#                app.root.current = "main"
# TODO: how to make a countdown timer on click????!

    Button:
        text:"Go Back"
        on_release:
            root.manager.transition.direction = "right"
            app.root.current = "main"
<PBMode>:
    CountDown:
        id: pb
        max:120

<NoteReading>:
    name: "NoteReading"
#    canvas.before:
#        Color:
#            rgba:(242/255, 213/255, 213/255, 1)
#        Rectangle:
#            pos: self.pos
#            size: self.size
#
#    canvas:
#        Color:
#            rgba:(0,0,0, 1)
#        Rectangle:
#            pos: 0, root.top
#            size: root.width, 200

        # Treble clef lines
        Rectangle:
            group: 'treblelines'
            pos: 0, root.top - self.topline_treble
            size: root.width, self.barheight

        Rectangle:
            group: 'treblelines'
            pos: 0, root.top - self.topline_treble - self.barspace
            size: root.width, self.barheight

        Rectangle:
            group: 'treblelines'
            pos: 0, root.top - self.topline_treble - self.barspace * 2
            size: root.width, self.barheight

        Rectangle:
            group: 'treblelines'
            pos: 0, root.top - self.topline_treble - self.barspace * 3
            size: root.width, self.barheight

        Rectangle:
            group: 'treblelines'
            pos: 0, root.top - self.bottomline_treble
            size: root.width, self.barheight

        # Bass clef lines
        Rectangle:
            group: 'basslines'
            pos: 0, root.top - self.topline_bass
            size: root.width, self.barheight

        Rectangle:
            group: 'basslines'
            pos: 0, root.top - self.topline_bass - self.barspace
            size: root.width, self.barheight

        Rectangle:
            group: 'basslines'
            pos: 0, root.top - self.topline_bass - self.barspace * 2
            size: root.width, self.barheight

        Rectangle:
            group: 'basslines'
            pos: 0, root.top - self.topline_bass - self.barspace * 3
            size: root.width, self.barheight

        Rectangle:
            group: 'basslines'
            pos: 0, root.top - self.bottomline_bass
            size: root.width, self.barheight

        Rectangle:
            group: 'noteline1'
            pos: (root.width/2 - (self.barwidth / 2), root.top - self.bottomline_treble)
            size: (self.barwidth, self.barheight)

        Rectangle:
            group: 'noteline2'
            pos: (root.width/2 - (self.barwidth / 2)+5,  root.top - self.bottomline_treble - self.barspace * 2)
            size: (self.barwidth, self.barheight)

#    Image:
#        source: "images/treble.png"
#        #size: (0.1,0.5)
#        #allow_stretch: True
#        keep_ratio: False
#        pos: -370, root.top - 570
#
#    Image:
#        source: "images/bass.png"
#        #size_hint_x: 0.1
#        allow_stretch: False
#       # size: self.texture_size
#        #allow_stretch: True
#        keep_ratio: False
#        pos: -370, root.top - 700
#    Label:
#        font_size: 50
#        pos_hint:{"x":0,"y":0.22}
#        text:"Note Reading Practice"
#    Button:
#        id: noteBtn
#        text: "Start"
#        font_size: 20
#        size_hint:0.1,0.1
#        size: 120, 80
#        pos: root.top-600, root.top -110
#        on_press: root.generate_note()
#        on_release: root.remove_widget(self)
#        background_color: 212/255, 186/255, 154/255,1
#
#    Button:
#        id: stopBtn
#        text: "Stop"
#        font_size: 20
#        size_hint:0.1,0.1
#        size: 120, 80
#        pos: root.top-500, root.top -110
#        on_press: root.generate_note()
#        on_release: root.remove_widget(self)
#        background_color: 212/255, 186/255, 154/255,1
#
#    Button:
#        id: recordBtn
#        text: "Record"
#        font_size: 20
#        size_hint:0.1,0.1
#        size: 120, 80
#        pos: root.top-400, root.top -110
#        on_press: root.generate_note()
#        on_release: root.remove_widget(self)
#        background_color: 212/255, 186/255, 154/255,1
#
#    Label:
#        id: noteGuess
#        text: "Identify The Note"
#        font_size: 40
#        color: (0.8, 0.8, 0.8)
#        pos: (root.width / 2 - 50, root.top - 100)
#
#    Button:
#        size_hint:0.15,0.15
#        text:"Go Back"
#        on_release:
#            root.manager.transition.direction = "right"
#            app.root.current = "main"
#
